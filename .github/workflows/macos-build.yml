name: macOS Build & Unit Tests
on: [push, pull_request]
env:
  testrunner: 'WisteriaTestRunner'
  outfile: 'WDV-macos-junit.xml'
  guitestrunner: 'WisteriaGuiTestRunner'
  guioutfile: 'WDV-gui-macos-junit.xml'

jobs:
  build:
    name: macos-build
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
  
      - name: Download wxwidgets
        run: |
             brew install grep
             brew install tbb
             git clone https://github.com/wxWidgets/wxWidgets.git --recurse-submodules
 
      - name: Build and demo
        run: |
             cmake ./
             cmake --build . -j4

      - name: Run low-level tests
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
             cd ..
             git clone https://github.com/catchorg/Catch2.git
             cd ${{ github.workspace }}/tests
             cmake ./
             cmake --build . -j4
             cd bin
             ./${{ env.testrunner }} --reporter JUnit::out=${{ env.outfile }}
             cat ${{ env.outfile }}
             errors=$(cat ${{ env.outfile }} | ggrep -Po '(errors)="\K[^"]*')
             failures=$(cat ${{ env.outfile }} | ggrep -Po '(failures)="\K[^"]*')
             echo "Error count is: ${errors}"
             echo "Failure count is: ${failures}"
             if [ "$errors" -gt 0 ]; then
               exit 1
             fi
             if [ "$failures" -gt 0 ]; then
               exit 1
             fi

      - name: Run GUI tests
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
             cd ${{ github.workspace }}/tests/gui-tests
             cmake ./
             cmake --build . -j4
             cd bin
             ./${{ env.guitestrunner }} --reporter JUnit::out=${{ env.guioutfile }}
             cat ${{ env.guioutfile }}
             errors=$(cat ${{ env.guioutfile }} | grep -Po '(errors)="\K[^"]*')
             failures=$(cat ${{ env.guioutfile }} | grep -Po '(failures)="\K[^"]*')
             echo "Error count is: ${errors}"
             echo "Failure count is: ${failures}"
             if [ "$errors" -gt 0 ]; then
               exit 1
             fi
             if [ "$failures" -gt 0 ]; then
               exit 1
             fi

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: macOS unit tests
          path: |
            ${{ github.workspace }}/tests/bin/*.xml
            ${{ github.workspace }}/tests/gui-tests/bin/*.xml
