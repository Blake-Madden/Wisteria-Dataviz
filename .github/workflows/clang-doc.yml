name: clang-doc

on:
  push:
    branches: [ main, master ]
  pull_request:

permissions:
  contents: read

env:
  # Flip to 'false' if you don't want warnings to fail the job
  TREAT_WARNINGS_AS_ERRORS: 'true'
  LLVM_VERSION: '18'

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Install LLVM/Clang (including clang-doc)
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: ${{ env.LLVM_VERSION }}
          env: true  # add to PATH

      - name: Show tool versions
        run: |
          clang --version || true
          clang-doc --version || true
          cmake --version

      - name: Configure (CMake, compile_commands.json)
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Generate docs with clang-doc
        run: |
          set -euo pipefail
          mkdir -p clang-doc
          # Run clang-doc against TU list from compile_commands.json in ./build
          # Notes:
          #  -p <build> points clang-doc at compile_commands.json
          #  -output=<dir> is the destination
          #  --public filters to public API only (drop if you want internals)
          #  --format=md produces Markdown (yaml and html are also available)
          clang-doc -p build -output=clang-doc --format=md --public \
            2> clang-doc.log || echo "::error ::clang-doc exited non-zero (check log)"
          # capture exit code but don't fail yet; weâ€™ll gate on diagnostics below
          echo "$?" > clang_doc_exit_code.txt

      - name: Diagnostic gate (fail on errors / warnings)
        id: diag
        run: |
          set -euo pipefail
          errors=$(grep -i -c "error:" clang-doc.log || true)
          warnings=$(grep -i -c "warning:" clang-doc.log || true)
          files=$(find clang-doc -type f | wc -l | tr -d ' ')
          exit_code=$(cat clang_doc_exit_code.txt)

          echo "errors=${errors}" >> "$GITHUB_OUTPUT"
          echo "warnings=${warnings}" >> "$GITHUB_OUTPUT"
          echo "files=${files}" >> "$GITHUB_OUTPUT"
          echo "exit_code=${exit_code}" >> "$GITHUB_OUTPUT"

          # Treat as failure if:
          #  - clang-doc itself exited non-zero
          #  - any errors were reported
          #  - warnings are present AND policy says warnings are errors
          if [ "$exit_code" -ne 0 ]; then
            echo "::error ::clang-doc returned non-zero exit code ($exit_code)."
            exit 1
          fi
          if [ "$errors" -gt 0 ]; then
            echo "::error ::Found ${errors} error diagnostics in clang-doc log."
            exit 1
          fi
          if [ "${TREAT_WARNINGS_AS_ERRORS}" = "true" ] && [ "$warnings" -gt 0 ]; then
            echo "::error ::Found ${warnings} warning diagnostics (warnings treated as errors)."
            exit 1
          fi
          # Also fail if the output directory is empty (nothing documented)
          if [ "$files" -eq 0 ]; then
            echo "::error ::No documentation files were generated."
            exit 1
          fi

      - name: Job summary
        if: always()
        run: |
          {
            echo "## clang-doc summary"
            echo ""
            echo "- Files generated: ${{ steps.diag.outputs.files }}"
            echo "- Errors: ${{ steps.diag.outputs.errors }}"
            echo "- Warnings: ${{ steps.diag.outputs.warnings }}"
            echo ""
            echo "Artifacts:"
            echo "- \`clang-doc\` (generated docs)"
            echo "- \`clang-doc.log\` (full diagnostics)"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload docs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: clang-doc
          path: clang-doc
          if-no-files-found: warn
          retention-days: 7

      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: clang-doc-log
          path: clang-doc.log
          if-no-files-found: warn
          retention-days: 7
